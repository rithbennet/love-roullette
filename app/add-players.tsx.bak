import { useState, useCallback } from 'react';
import { SafeAreaView } from 'react-native-safe-area-context';
import { Text, View, TextInput, Pressable, ScrollView, Alert } from 'react-native';
import { useRouter } from 'expo-router';

import { useGameState } from '../src/core/gameStore';

const DARING_LEVELS = [
    { level: 1, emoji: 'ðŸ”¥', label: 'Mild' },
    { level: 2, emoji: 'ðŸ”¥ðŸ”¥', label: 'Spicy' },
    { level: 3, emoji: 'ðŸ”¥ðŸ”¥ðŸ”¥', label: 'Wild' },
] as const;

const MAX_PLAYERS = 5;

export default function AddPlayersScreen() {
    const router = useRouter();
    const players = useGameState((state) => state.players);
    const addPlayer = useGameState((state) => state.addPlayer);
    const removePlayer = useGameState((state) => state.removePlayer);

    const [name, setName] = useState('');
    const [crush, setCrush] = useState('');
    const [daringLevel, setDaringLevel] = useState(1);

    const canAddMore = players.length < MAX_PLAYERS;

    const handleAddPlayer = useCallback(() => {
        if (!name.trim()) {
            Alert.alert('Missing Name', 'Please enter a player name.');
            return;
        }

        if (players.length >= MAX_PLAYERS) {
            Alert.alert('Max Players', `You can only add up to ${MAX_PLAYERS} players.`);
            return;
        }

        addPlayer({
            name: name.trim(),
            crush: crush.trim() || 'Unknown',
            daringLevel,
            characterId: `character-${players.length + 1}`,
        });

        // Reset form
        setName('');
        setCrush('');
        setDaringLevel(1);
    }, [addPlayer, crush, daringLevel, name, players.length]);

    const handleRemovePlayer = useCallback(
        (id: string) => {
            removePlayer(id);
        },
        [removePlayer]
    );

    const handleAddWithFlow = useCallback(() => {
        router.push('/(add-players)');
    }, [router]);

    return (
        <SafeAreaView className="flex-1 bg-rose-950">
            <ScrollView className="flex-1">
                <View className="flex-1 px-6 py-8 gap-6">
                    {/* Header */}
                    <View>
                        <Text className="text-3xl font-bold text-rose-50">Add Players</Text>
                        <Text className="text-sm text-rose-300 mt-2">
                            {players.length} / {MAX_PLAYERS} players added
                        </Text>
                    </View>

                    {/* New Add Player Button with Flow */}
                    <Pressable
                        onPress={handleAddWithFlow}
                        disabled={!canAddMore}
                        className={`rounded-xl py-4 ${canAddMore ? 'bg-rose-600 active:bg-rose-700' : 'bg-rose-900/50'
                            }`}
                    >
                        <Text
                            className={`text-center text-lg font-semibold ${canAddMore ? 'text-rose-50' : 'text-rose-500'
                                }`}
                        >
                            {canAddMore ? 'âœ¨ Add Player with Avatar' : 'Max Players Reached'}
                        </Text>
                    </Pressable>

                    {/* Add Player Form */}
                    <View className="rounded-3xl bg-rose-900/40 p-6 gap-4">
                        <Text className="text-lg font-semibold text-rose-100">New Player</Text>

                        {/* Name Input */}
                        <View className="gap-2">
                            <Text className="text-sm text-rose-200">Name *</Text>
                            <TextInput
                                value={name}
                                onChangeText={setName}
                                placeholder="Enter name..."
                                placeholderTextColor="#fda4af"
                                className="rounded-xl bg-rose-950/50 px-4 py-3 text-base text-rose-50"
                                editable={canAddMore}
                            />
                        </View>

                        {/* Crush Input */}
                        <View className="gap-2">
                            <Text className="text-sm text-rose-200">Crush (optional)</Text>
                            <TextInput
                                value={crush}
                                onChangeText={setCrush}
                                placeholder="Who's their crush?"
                                placeholderTextColor="#fda4af"
                                className="rounded-xl bg-rose-950/50 px-4 py-3 text-base text-rose-50"
                                editable={canAddMore}
                            />
                        </View>

                        {/* Daring Level */}
                        <View className="gap-2">
                            <Text className="text-sm text-rose-200">Daring Level</Text>
                            <View className="flex-row gap-3">
                                {DARING_LEVELS.map(({ level, emoji, label }) => (
                                    <Pressable
                                        key={level}
                                        onPress={() => setDaringLevel(level)}
                                        disabled={!canAddMore}
                                        className={`flex-1 rounded-xl py-3 px-2 items-center ${daringLevel === level ? 'bg-rose-700' : 'bg-rose-950/50'
                                            }`}
                                    >
                                        <Text className="text-xl mb-1">{emoji}</Text>
                                        <Text className="text-xs text-rose-200">{label}</Text>
                                    </Pressable>
                                ))}
                            </View>
                        </View>

                        {/* Add Button */}
                        <Pressable
                            onPress={handleAddPlayer}
                            disabled={!canAddMore}
                            className={`rounded-xl py-3 mt-2 ${canAddMore ? 'bg-rose-600 active:bg-rose-700' : 'bg-rose-900/50'
                                }`}
                        >
                            <Text
                                className={`text-center text-base font-semibold ${canAddMore ? 'text-rose-50' : 'text-rose-500'
                                    }`}
                            >
                                {canAddMore ? 'Add Player' : 'Max Players Reached'}
                            </Text>
                        </Pressable>
                    </View>

                    {/* Player List */}
                    {players.length > 0 && (
                        <View className="gap-4">
                            <Text className="text-lg font-semibold text-rose-100">Current Players</Text>
                            {players.map((player) => {
                                const daringInfo = DARING_LEVELS.find((d) => d.level === player.daringLevel);
                                return (
                                    <View
                                        key={player.id}
                                        className="flex-row items-center justify-between rounded-2xl bg-rose-900/40 p-4"
                                    >
                                        <View className="flex-1 gap-1">
                                            <Text className="text-base font-semibold text-rose-50">
                                                {player.name}
                                            </Text>
                                            <Text className="text-sm text-rose-300">
                                                {player.crush && player.crush !== 'Unknown' && `ðŸ’˜ ${player.crush}`}
                                                {(!player.crush || player.crush === 'Unknown') && 'No crush set'}
                                            </Text>
                                            <Text className="text-xs text-rose-400">
                                                {daringInfo?.emoji} {daringInfo?.label}
                                            </Text>
                                        </View>

                                        <Pressable
                                            onPress={() => handleRemovePlayer(player.id)}
                                            className="rounded-full bg-rose-800 active:bg-rose-700 px-4 py-2"
                                        >
                                            <Text className="text-sm font-medium text-rose-100">Remove</Text>
                                        </Pressable>
                                    </View>
                                );
                            })}
                        </View>
                    )}

                    {/* Back Button */}
                    <Pressable
                        onPress={() => router.back()}
                        className="rounded-full bg-rose-800 active:bg-rose-700 py-4 mt-4"
                    >
                        <Text className="text-center text-lg font-semibold text-rose-50">
                            Back to Settings
                        </Text>
                    </Pressable>
                </View>
            </ScrollView>
        </SafeAreaView>
    );
}
